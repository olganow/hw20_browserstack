plugins {
    id 'java-library'
    id 'io.qameta.allure' version '2.11.2'
}

group = 'ru.ya.olganow'
version = '1.0-SNAPSHOT'

compileTestJava {
    options.encoding = 'UTF-8'
}


def selenideVersion = "6.13.0",
    restAssuredVersion = "5.3.1",
    allureVersion = "2.27.0",
    junitJupiterVersion = "5.10.2",
    slf4jVersion = "2.0.13",
    assertjVersion = "3.26.0",
    ownerVersion = "1.0.12",
    clientVersion = "8.3.0"

repositories {
    mavenCentral()
}

allure {
    report {
        version.set(allureVersion)
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set(allureVersion)
            }
        }
    }
}

dependencies {
    testImplementation(
            "com.codeborne:selenide:$selenideVersion",
            "org.junit.jupiter:junit-jupiter:$junitJupiterVersion",
            "io.qameta.allure:allure-selenide:$allureVersion",
            "io.rest-assured:rest-assured:$restAssuredVersion",
            "io.rest-assured:json-schema-validator:$restAssuredVersion",
            "io.qameta.allure:allure-rest-assured:$allureVersion",
            "org.assertj:assertj-core:$assertjVersion",
            "org.slf4j:slf4j-simple:$slf4jVersion",
            "org.aeonbits.owner:owner:$ownerVersion",
            "io.appium:java-client:$clientVersion"
    )
    runtimeOnly 'org.aspectj:aspectjweaver:1.9.22.1'
}

tasks.withType(Test) {
    useJUnitPlatform()
    systemProperties(System.getProperties())

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}